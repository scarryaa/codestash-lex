// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts,import_extension="
// @generated from file codestash.proto (package codestash, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Empty, GetActorsRequest, GetActorsResponse, GetActorTakedownRequest, GetActorTakedownResponse, GetBlobTakedownRequest, GetBlobTakedownResponse, GetCountsForUsersRequest, GetCountsForUsersResponse, GetDidsByHandlesRequest, GetDidsByHandlesResponse, GetIdentityByDidRequest, GetIdentityByDidResponse, GetIdentityByHandleRequest, GetIdentityByHandleResponse, GetLatestRevRequest, GetLatestRevResponse, GetProfileRecordsRequest, GetProfileRecordsResponse, GetRecordTakedownRequest, GetRecordTakedownResponse, GetRelationshipsRequest, GetRelationshipsResponse, GetRepositoriesRequest, GetRepositoriesResponse, GetRepositoryRecordsRequest, GetRepositoryRecordsResponse, URLResponse } from "./codestash_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service codestash.Service
 */
export const Service = {
  typeName: "codestash.Service",
  methods: {
    /**
     * Records
     *
     * @generated from rpc codestash.Service.GetRepositoryRecords
     */
    getRepositoryRecords: {
      name: "GetRepositoryRecords",
      I: GetRepositoryRecordsRequest,
      O: GetRepositoryRecordsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repository
     *
     * @generated from rpc codestash.Service.GetRepositories
     */
    getRepositories: {
      name: "GetRepositories",
      I: GetRepositoriesRequest,
      O: GetRepositoriesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Identity
     *
     * @generated from rpc codestash.Service.GetIdentityByDid
     */
    getIdentityByDid: {
      name: "GetIdentityByDid",
      I: GetIdentityByDidRequest,
      O: GetIdentityByDidResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc codestash.Service.GetIdentityByHandle
     */
    getIdentityByHandle: {
      name: "GetIdentityByHandle",
      I: GetIdentityByHandleRequest,
      O: GetIdentityByHandleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Profile
     *
     * @generated from rpc codestash.Service.GetActors
     */
    getActors: {
      name: "GetActors",
      I: GetActorsRequest,
      O: GetActorsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc codestash.Service.GetDidsByHandles
     */
    getDidsByHandles: {
      name: "GetDidsByHandles",
      I: GetDidsByHandlesRequest,
      O: GetDidsByHandlesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Moderation
     *
     * @generated from rpc codestash.Service.GetBlobTakedown
     */
    getBlobTakedown: {
      name: "GetBlobTakedown",
      I: GetBlobTakedownRequest,
      O: GetBlobTakedownResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc codestash.Service.GetRecordTakedown
     */
    getRecordTakedown: {
      name: "GetRecordTakedown",
      I: GetRecordTakedownRequest,
      O: GetRecordTakedownResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc codestash.Service.GetActorTakedown
     */
    getActorTakedown: {
      name: "GetActorTakedown",
      I: GetActorTakedownRequest,
      O: GetActorTakedownResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Records
     *
     * @generated from rpc codestash.Service.GetProfileRecords
     */
    getProfileRecords: {
      name: "GetProfileRecords",
      I: GetProfileRecordsRequest,
      O: GetProfileRecordsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Relationships
     *
     * @generated from rpc codestash.Service.GetRelationships
     */
    getRelationships: {
      name: "GetRelationships",
      I: GetRelationshipsRequest,
      O: GetRelationshipsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sync
     *
     * @generated from rpc codestash.Service.GetLatestRev
     */
    getLatestRev: {
      name: "GetLatestRev",
      I: GetLatestRevRequest,
      O: GetLatestRevResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Interaction Counts
     *
     * @generated from rpc codestash.Service.GetCountsForUsers
     */
    getCountsForUsers: {
      name: "GetCountsForUsers",
      I: GetCountsForUsersRequest,
      O: GetCountsForUsersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * URL
     *
     * @generated from rpc codestash.Service.GetURL
     */
    getURL: {
      name: "GetURL",
      I: Empty,
      O: URLResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

